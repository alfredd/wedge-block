# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import wedgeblock_pb2 as wedgeblock__pb2


class EdgeNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Execute = channel.unary_unary(
                '/wedgeblock.EdgeNode/Execute',
                request_serializer=wedgeblock__pb2.Transaction.SerializeToString,
                response_deserializer=wedgeblock__pb2.Hash1Response.FromString,
                )
        self.ExecuteBatch = channel.unary_stream(
                '/wedgeblock.EdgeNode/ExecuteBatch',
                request_serializer=wedgeblock__pb2.TransactionBatch.SerializeToString,
                response_deserializer=wedgeblock__pb2.Hash1ResponseBatch.FromString,
                )
        self.GetPhase2Hash = channel.unary_unary(
                '/wedgeblock.EdgeNode/GetPhase2Hash',
                request_serializer=wedgeblock__pb2.LogHash.SerializeToString,
                response_deserializer=wedgeblock__pb2.Hash2.FromString,
                )


class EdgeNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Execute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPhase2Hash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EdgeNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Execute': grpc.unary_unary_rpc_method_handler(
                    servicer.Execute,
                    request_deserializer=wedgeblock__pb2.Transaction.FromString,
                    response_serializer=wedgeblock__pb2.Hash1Response.SerializeToString,
            ),
            'ExecuteBatch': grpc.unary_stream_rpc_method_handler(
                    servicer.ExecuteBatch,
                    request_deserializer=wedgeblock__pb2.TransactionBatch.FromString,
                    response_serializer=wedgeblock__pb2.Hash1ResponseBatch.SerializeToString,
            ),
            'GetPhase2Hash': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPhase2Hash,
                    request_deserializer=wedgeblock__pb2.LogHash.FromString,
                    response_serializer=wedgeblock__pb2.Hash2.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'wedgeblock.EdgeNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EdgeNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Execute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wedgeblock.EdgeNode/Execute',
            wedgeblock__pb2.Transaction.SerializeToString,
            wedgeblock__pb2.Hash1Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/wedgeblock.EdgeNode/ExecuteBatch',
            wedgeblock__pb2.TransactionBatch.SerializeToString,
            wedgeblock__pb2.Hash1ResponseBatch.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPhase2Hash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wedgeblock.EdgeNode/GetPhase2Hash',
            wedgeblock__pb2.LogHash.SerializeToString,
            wedgeblock__pb2.Hash2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
