syntax = "proto3";
package wedgeblock;
/**
Compile instruction:
python3 -m grpc_tools.protoc -I./ --python_out=. --grpc_python_out=. wedgeblock.proto
**/

service EdgeNode {
    rpc Execute (Transaction) returns (Hash1Response);
    rpc ExecuteBatch (TransactionBatch) returns (stream Hash1Response);
    rpc GetPhase2Hash (LogHash) returns (Hash2);
    rpc AnswerQuery (QueryBatch) returns (stream Hash1Response);
    rpc AnswerFullLogAudit (AuditRequest) returns (stream Hash1Response);
}

message RWSet {
    TxnType type = 1;
    bytes key = 2;
    bytes val = 3;
}

message Transaction {
    RWSet rw = 1;
    bytes signature = 2;
    int32 sequenceNumber = 3;
}

message TransactionBatch {
    repeated Transaction content = 1;
}

enum TxnType {
    RO = 0;
    RW = 1;
}

message Hash1 {
    int32 logIndex = 1;
    RWSet rw = 2;
    string merkleRoot = 3;
    bytes merkleProof = 4;
    int32 sequenceNumber = 5;
}

message Hash1Response {
    Hash1 h1 = 1;
    bytes signature = 2;
}

message Hash1ResponseBatch {
    repeated Hash1Response content = 1;
}

message LogHash {
    int32 logIndex =1;
    string merkleRoot = 2;
}

message Hash2 {
    bytes TxnHash = 1;
    Hash2Status status = 2;
}

enum Hash2Status {
    INVALID = 0;
    NOT_READY = 1;
    VALID = 2;
}

message LogEntry {
    int32 index = 1;
    bytes merkleTree = 2;
}

message LogIndex {
    int32 index = 1;
}

message QueryBatch {
    repeated bytes keys = 2;
    bytes signature = 3;
}

message AuditRequest {
    repeated int32 logIndexes = 1;
    bytes signature = 2;
}